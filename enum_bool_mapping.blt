
///////////////////////////////////////////////////////////////////////////////
bool `name`(`enum.name` constant) {
   switch (constant) {`
enum = enum
max_length = enum.max_constant_name_length
predicate = predicate
predicate_is_func = type(predicate) == 'function'
default = default ? true : false
with each enum.constants using # {
   value = predicate_is_func ? predicate($, enum) : $[predicate]
   if value ~= nil {
      value = value ? true : false
      if value ~= default {
         nl `      case `enum.name`::`name`:`
         string.rep(' ', max_length + 1 - #name)
         `return `value`;`
      }
   }
}
`
      default:
         return `default`;
   }
}
